<?php

/**
 * @file
 * Installation file for the Menu translation (Node) module.
 *
 * @author Francesco Placella, http://www.psegno.it, 2010
 */

/**
 * Implementation of hook_install().
 */
function i18nmenu_node_install() {
  global $i18nmenu_node_install;
  $i18nmenu_node_install = TRUE;
}

/**
 * Implementation of hook_enable().
 */
function i18nmenu_node_enable() {
  global $i18nmenu_node_install;
  // On install enable node translation for all the node menu items, otherwise
  // preserve the current settings.
  $force_status = $i18nmenu_node_install ? variable_get('i18nmenu_node_force_status', TRUE) : NULL;
  i18nmenu_node_item_translations_refresh_all($force_status);
}

/**
 * Implementation of hook_uninstall().
 *
 * Delete all variables and remove all the node menu items settings.
 */
function i18nmenu_node_uninstall() {
  $result = db_query('SELECT name FROM {variable} WHERE name LIKE \'i18nmenu_node_translation_%%\'');
  while ($row = db_fetch_object($result)) {
    variable_del($row->name);
  }
  i18nmenu_node_item_translations_refresh_all(FALSE);
}

/**
 * Implementation of hook_requirements().
 */
function i18nmenu_node_requirements($phase) {
  $t = get_t();
  $requirements = array();

  $modules = array(
    'i18n' => array(
      'version' => 1.9,
      'severity' => REQUIREMENT_ERROR,
    ),
    'context' => array(
      'version' => 3.0,
      'severity' => REQUIREMENT_WARNING,
    ),
    'token' => array(
      'version' => 1.15,
      'severity' => REQUIREMENT_WARNING,
    ),
    'pathauto' => array(
      'version' => 1.5,
      'severity' => REQUIREMENT_WARNING,
    ),
  );

  foreach ($modules as $module => $data) {
    if (module_exists($module)) {
      $file = drupal_get_path('module', $module) ."/$module.info";
      $info = drupal_parse_info_file($file);
      $version = explode('-', $info['version']);
      // We do not support extra version information, dev versions are ignored.
      if (!empty($version[1]) && $version[1] < $data['version'] && (empty($version[2]) || $version[2] != 'dev')) {
        $requirements["i18nmenu_node_$module"] = array(
          'title' => $t('Menu translation (Node)'),
          'value' => $t('%module version needs to be at least %min_version', array('%module' => $info['name'], '%min_version' => $data['version'])),
          'severity' => $data['severity'],
        );
      }
    }
  }

  return $requirements;
}

/**
 * Implements hook_update_N().
 *
 * Convert block delta to the new format <module>:<delta>.
 */
function i18nmenu_node_update_6100() {
  $query = "UPDATE {blocks} SET delta = CONCAT('menu:', delta) WHERE module = 'i18nmenu_node'";
  return array(update_sql($query));
}

/**
 * Implements hook_update_N().
 */
function i18nmenu_node_update_6101() {
  drupal_set_message(t('The new token <code>[i18n-menupath-raw]</code> has been introduced to replace the deprecated <code>[i18n-menuhierarchy-raw]</code>. Please be sure to replace all its occurrences as it will be removed in the next stable version. Visit the <a href="!url">status report</a> page to check that the new requirements are satisfied. You might want to read the <a href="http://drupal.org/node/926130">related issue</a> for details.', array('!url' => url('admin/reports/status'))), 'warning');
  return array();
}

/**
 * Implements hook_update_N().
 *
 * Convert block delta to the new format <module>--<delta>.
 */
function i18nmenu_node_update_6102() {
  $query = "UPDATE {blocks} SET delta = REPLACE(delta, ':', '--') WHERE module = 'i18nmenu_node'";
  return array(update_sql($query));
}

/**
 * Implements hook_update_N().
 */
function i18nmenu_node_update_6103() {
  drupal_set_message(t('The <code>[i18n-menuhierarchy-raw]</code> token has been removed. Please be sure to replace all its occurrences with <code>[i18n-menupath-raw]</code>.'), 'warning');
  return array();
}

/**
 * Implements hook_update_N().
 */
function i18nmenu_node_update_6104() {
  // Update the Context reactions involving [i18n] blocks.
  if (module_exists('context')) {
    $contexts = context_load();
    foreach ($contexts as $context) {
      $update = FALSE;
      if (isset($context->reactions['block'])) {
        foreach ($context->reactions['block']['blocks'] as $key => $block) {
          if ($block['module'] == 'i18nmenu_node') {
            unset($context->reactions['block']['blocks'][$key]);
            $key = str_replace(':', '--', $key);
            $block['delta'] = str_replace(':', '--', $block['delta']);
            $context->reactions['block']['blocks'][$key] = $block;
            $update = TRUE;
          }
        }
      }
      if ($update) {
        context_save($context);
      }
    }
  }

  // We "unofficially" support also the Domain Access module.
  if (module_exists('domain')) {
    $query = "UPDATE {domain_blocks} SET delta = REPLACE(delta, ':', '--') WHERE module = 'i18nmenu_node'";
    return array(update_sql($query));
  }

  return array();
}
